{"version":3,"file":"index.js","sources":["../src/reporters/util/Projector.js","../src/reporters/util/Terminal.js","../src/reporters/util/Message.js","../src/reporters/util/Spinner.js","../src/reporters/util/Indicator.js","../src/constants/config.js","../src/reporters/util/configList.js","../src/reporters/util/customConfigToLines.js","../src/reporters/util/pluralize.js","../src/errors.js","../src/reporters/util/handleError.js","../src/reporters/util/msToString.js","../src/tasks/util/filterUpdateResults.js","../src/reporters/dense.js","../src/reporters/none.js","../src/reporters/index.js","../src/bin/argv.js","../src/tasks/util/Sequence.js","../src/tasks/util/createUpdateTask.js","../src/constants/filterReasons.js","../src/tasks/util/filterUpdateTask.js","../src/tasks/init.js","../src/tasks/util/createUpdateResult.js","../src/tasks/util/updateTo.js","../src/tasks/util/rollbackTo.js","../src/tasks/sequentialUpdate.js","../src/tasks/util/splitUpdateTasks.js","../src/tasks/batchUpdate.js","../src/tasks/finish.js","../src/tasks/util/updateVersionRange.js","../src/tasks/util/createUpdatedPackageJson.js","../src/tasks/updatePackageJson.js","../src/run.js","../src/util/fs.js","../src/exec/exec.js","../src/exec/cmds.js","../src/exec/parse.js","../src/Updtr.js","../src/index.js","../src/bin/index.js"],"sourcesContent":["function lineToString(line) {\n    if (Array.isArray(line) === true) {\n        return line.join(\"\");\n    }\n\n    return String(line);\n}\n\nexport default class Projector {\n    constructor(terminal, frameRate = 10) {\n        this.terminal = terminal;\n        this.delay = Math.floor(1000 / frameRate);\n        this.timeoutId = null;\n    }\n    display(frame) {\n        if (this.timeoutId !== null) {\n            this.stop();\n        }\n        this.terminal.append(frame.map(lineToString));\n        this.timeoutId = setTimeout(() => {\n            this.display(frame);\n        }, this.delay);\n    }\n    stop() {\n        if (this.timeoutId === null) {\n            return;\n        }\n        this.terminal.rewind();\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n    }\n}\n","import ansiEscapes from \"ansi-escapes\";\nimport cliCursor from \"cli-cursor\";\nimport stringWidth from \"string-width\";\n\nfunction calcNumOfRows(lines, columns) {\n    return lines\n        .map(lineContent => Math.ceil(stringWidth(lineContent) / columns))\n        .reduce((allRows, rows) => allRows + rows, 0);\n}\n\n// Solves some issues where stdout output is truncated\n// See https://github.com/nodejs/node/issues/6456\nfunction setBlocking(stream) {\n    if (stream._handle && typeof stream._handle.setBlocking === \"function\") {\n        stream._handle.setBlocking(true);\n    }\n}\n\nexport default class Terminal {\n    constructor(stream) {\n        if (stream.isTTY !== true) {\n            throw new Error(\"Given stream is not a TTY stream\");\n        }\n        setBlocking(stream);\n        cliCursor.hide(stream);\n        this.stream = stream;\n        this.lines = [];\n        this.hasBeenResized = false;\n        this.stream.on(\"resize\", () => {\n            this.hasBeenResized = true;\n        });\n    }\n    append(lines) {\n        if (lines.length === 0) {\n            return;\n        }\n        this.lines.push(lines);\n\n        const content = this.hasBeenResized === true ?\n            ansiEscapes.clearScreen +\n                  this.lines.map(lines => lines.join(\"\\n\")).join(\"\\n\") :\n            ansiEscapes.eraseDown + lines.join(\"\\n\");\n\n        this.stream.write(content + \"\\n\");\n        this.hasBeenResized = false;\n    }\n    rewind() {\n        const removedLines = this.lines.pop();\n        const rows = calcNumOfRows(removedLines, this.stream.columns);\n\n        this.stream.write(ansiEscapes.cursorUp(rows));\n    }\n}\n","export default class Message {\n    constructor(template, variables) {\n        this.template = template;\n        this.variables = variables;\n    }\n    valueOf() {\n        const split = this.template.split(/%s/g);\n\n        return split.reduce(\n            (str, part, i) => str + part + (this.variables[i] || \"\"),\n            \"\"\n        );\n    }\n    toString() {\n        return this.valueOf();\n    }\n}\n","import cliSpinners from \"cli-spinners\";\n\nconst isWin = process.platform === \"win32\";\nconst winFallback = \"simpleDotsScrolling\";\n\nexport default class Spinner {\n    constructor(spinnerName) {\n        const spinner = cliSpinners[isWin === true ? winFallback : spinnerName];\n\n        this.frames = spinner.frames;\n        this.interval = spinner.interval;\n        this.length = Math.max(...this.frames.map(frame => frame.length));\n    }\n    valueOf() {\n        const currentInterval = Math.floor(Date.now() / this.interval);\n        const currentFrame = currentInterval % this.frames.length;\n\n        return this.frames[currentFrame];\n    }\n    toString() {\n        return this.valueOf();\n    }\n}\n","import unicons from \"unicons\";\nimport chalk from \"chalk\";\n\nexport const INDICATOR_NEUTRAL = 0;\nexport const INDICATOR_FAIL = 1;\nexport const INDICATOR_PENDING = 2;\nexport const INDICATOR_OK = 3;\n\nconst COLORS = [chalk.grey, chalk.red, chalk.yellow, chalk.green];\n\nexport default class Indicator {\n    constructor(initialState) {\n        this.state = initialState;\n    }\n    valueOf() {\n        return COLORS[this.state](unicons.cli(\"circle\"));\n    }\n    toString() {\n        return this.valueOf();\n    }\n}\n","// The first value in arrays is the default value\n\nexport const USE_NPM = \"npm\";\nexport const USE_YARN = \"yarn\";\nexport const USE_OPTIONS = [USE_NPM, USE_YARN];\nexport const UPDATE_TO_LATEST = \"latest\";\nexport const UPDATE_TO_NON_BREAKING = \"non-breaking\";\nexport const UPDATE_TO_WANTED = \"wanted\";\nexport const UPDATE_TO_OPTIONS = [\n    UPDATE_TO_LATEST,\n    UPDATE_TO_NON_BREAKING,\n    UPDATE_TO_WANTED,\n];\nexport const SAVE_SMART = \"smart\";\nexport const SAVE_CARET = \"caret\";\nexport const SAVE_EXACT = \"exact\";\nexport const SAVE_OPTIONS = [SAVE_SMART, SAVE_CARET, SAVE_EXACT];\n","import {\n    USE_OPTIONS,\n    UPDATE_TO_OPTIONS,\n    SAVE_OPTIONS,\n} from \"../../constants/config\";\n\nconst configNames = {\n    use: \"use\",\n    exclude: \"exclude\",\n    test: \"test command\",\n    registry: \"registry\",\n    updateTo: \"update to\",\n    save: \"save\",\n};\nconst configValues = {\n    exclude: list => list.join(\", \"),\n};\nconst configFilter = {\n    cwd: () => false,\n    use: option => option !== USE_OPTIONS[0],\n    exclude: list => list.length > 0,\n    test: cmd => cmd !== undefined,\n    registry: reg => reg !== undefined,\n    updateTo: option => option !== UPDATE_TO_OPTIONS[0],\n    save: option => option !== SAVE_OPTIONS[0],\n};\n\nexport default function configList(config) {\n    return Object.keys(config)\n        .filter(key => {\n            const filter = configFilter[key];\n            const name = configNames[key];\n\n            return (\n                name !== undefined &&\n                (filter === undefined || filter(config[key]) === true)\n            );\n        })\n        .map(key => {\n            const toString = configValues[key] || String;\n\n            return `${ configNames[key] }: ${ toString(config[key]) }`;\n        });\n}\n","import unicons from \"unicons\";\nimport configList from \"./configList\";\n\nexport default function customConfigToLines(config) {\n    const list = configList(config);\n    const lines = [];\n\n    if (list.length > 0) {\n        lines.push(\n            \"Running updtr with custom configuration:\",\n            \"\",\n            ...list.map(item => unicons.cli(\"circle\") + \" \" + item),\n            \"\"\n        );\n    }\n\n    return lines;\n}\n","export default function pluralize(num) {\n    return num === 1 ? \"\" : \"s\";\n}\n","// Errors are not extendable in node v4.\n// Remove this if node v4 is not supported anymore.\nimport Error from \"es6-error\";\n\nexport class PackageJsonNoAccessError extends Error {\n    constructor(dir) {\n        super(`Cannot access package.json in ${ dir }`);\n    }\n}\n\nexport class RequiredOptionMissingError extends Error {\n    constructor(optionName, optionValue) {\n        super(\n            `Required option ${ optionName } is missing. Instead received ${ optionValue }`\n        );\n    }\n}\n\nexport class OptionValueNotSupportedError extends Error {\n    constructor(optionName, unsupportedValue) {\n        super(`Unsupported value ${ unsupportedValue } for option ${ optionName }`);\n    }\n}\n\nexport class YarnWithCustomRegistryError extends Error {\n    constructor() {\n        super(\n            \"yarn does not support custom registries yet. Please use a .npmrc file to achieve this\"\n        );\n    }\n}\n","import chalk from \"chalk\";\nimport { PackageJsonNoAccessError } from \"../../errors\";\n\nconst ERROR = chalk.bgRed.bold(\" ERROR \");\n\nexport default function handleError(err) {\n    const lines = [\"\"];\n\n    switch (err.constructor) {\n        case PackageJsonNoAccessError:\n            lines.push(\n                ERROR + \" Cannot find package.json in current directory.\"\n            );\n            break;\n        default: {\n            // The stack does only contain \\n, also on windows\n            const stack = err.stack.split(\"\\n\");\n\n            stack.shift();\n            lines.push(ERROR + \" \" + err.message);\n            lines.push(...stack.map(line => chalk.grey(line)));\n        }\n    }\n    lines.push(\"\");\n\n    console.error(lines.join(\"\\n\"));\n    process.exit(1); // eslint-disable-line no-process-exit\n}\n","export default function (milliseconds) {\n    return Math.floor(milliseconds / 1000).toFixed(1) + \"s\";\n}\n","export function filterSuccessfulUpdates(results) {\n    return results.filter(result => result.success === true);\n}\n\nexport function filterFailedUpdates(results) {\n    return results.filter(result => result.success === false);\n}\n","import chalk from \"chalk\";\nimport unicons from \"unicons\";\nimport Projector from \"./util/Projector\";\nimport Terminal from \"./util/Terminal\";\nimport Message from \"./util/Message\";\nimport Spinner from \"./util/Spinner\";\nimport Indicator, {\n    INDICATOR_NEUTRAL,\n    INDICATOR_PENDING,\n    INDICATOR_OK,\n    INDICATOR_FAIL,\n} from \"./util/Indicator\";\nimport customConfigToLines from \"./util/customConfigToLines\";\nimport pluralize from \"./util/pluralize\";\nimport handleError from \"./util/handleError\";\nimport msToString from \"./util/msToString\";\nimport {\n    filterSuccessfulUpdates,\n    filterFailedUpdates,\n} from \"../tasks/util/filterUpdateResults\";\n\nconst spinner = new Spinner(\"dots\");\n\nfunction updatingLine(updateTask) {\n    return [\n        new Indicator(INDICATOR_PENDING),\n        chalk.bold(updateTask.name),\n        chalk.grey(\"updating\"),\n        updateTask.rollbackTo,\n        chalk.grey(unicons.arrowRight),\n        updateTask.updateTo + chalk.grey(\"...\"),\n    ].join(\" \");\n}\n\nfunction testingLine(updateTask) {\n    return [\n        new Indicator(INDICATOR_PENDING),\n        chalk.bold(updateTask.name),\n        chalk.grey(\"testing...\"),\n    ].join(\" \");\n}\n\nfunction rollbackLine(updateTask) {\n    return [\n        new Indicator(INDICATOR_FAIL),\n        chalk.bold.red(updateTask.name),\n        chalk.grey(\"rolling back\"),\n        updateTask.updateTo,\n        chalk.grey(unicons.arrowRight),\n        updateTask.rollbackTo + chalk.grey(\"...\"),\n    ].join(\" \");\n}\n\nfunction successLine(updateTask) {\n    return [\n        new Indicator(INDICATOR_OK),\n        chalk.bold(updateTask.name),\n        updateTask.updateTo,\n        chalk.grey(\"success\"),\n    ].join(\" \");\n}\n\nfunction failLine(updateTask) {\n    return [\n        new Indicator(INDICATOR_FAIL),\n        chalk.bold.red(updateTask.name),\n        updateTask.updateTo,\n        chalk.grey(\"failed\"),\n    ].join(\" \");\n}\n\nfunction excludedLine(excluded) {\n    return [\n        new Indicator(INDICATOR_NEUTRAL),\n        chalk.bold(excluded.name),\n        chalk.grey(excluded.reason),\n    ].join(\" \");\n}\n\nfunction cmdToLines(description, cmd) {\n    const lines = Array.isArray(description) === true ?\n        description :\n        [description];\n\n    return lines.concat([chalk.grey(`> ${ cmd } `), spinner]);\n}\n\nexport default function (updtr, reporterConfig) {\n    const terminal = new Terminal(reporterConfig.stream);\n    const projector = new Projector(terminal);\n    const startTime = Date.now();\n    let excludedModules;\n\n    updtr.on(\"start\", ({ config }) => {\n        terminal.append(customConfigToLines(config));\n    });\n    updtr.on(\"init/install-missing\", ({ cmd }) => {\n        projector.display(\n            cmdToLines(\n                \"Installing missing dependencies\" + chalk.grey(\"...\"),\n                cmd\n            )\n        );\n    });\n    updtr.on(\"init/collect\", ({ cmd }) => {\n        projector.display(\n            cmdToLines(\"Looking for outdated modules\" + chalk.grey(\"...\"), cmd)\n        );\n    });\n    updtr.on(\"init/end\", ({ updateTasks, excluded }) => {\n        excludedModules = excluded;\n        projector.stop();\n        if (updateTasks.length === 0 && excluded.length === 0) {\n            terminal.append([\"Everything \" + chalk.bold(\"up-to-date\")]);\n        } else if (updateTasks.length === 0) {\n            terminal.append([\n                chalk.bold(\"No updates available\") +\n                    \" for the given modules and version range\",\n            ]);\n        } else {\n            terminal.append([\n                new Message(\"Found \" + chalk.bold(\"%s update%s\") + \".\", [\n                    updateTasks.length,\n                    pluralize(updateTasks.length),\n                ]),\n                \"\",\n            ]);\n        }\n    });\n    updtr.on(\"batch-update/updating\", event => {\n        projector.display(\n            cmdToLines(event.updateTasks.map(updatingLine), event.cmd)\n        );\n    });\n    updtr.on(\"batch-update/testing\", event => {\n        projector.display(\n            cmdToLines(event.updateTasks.map(testingLine), event.cmd)\n        );\n    });\n    updtr.on(\"batch-update/rollback\", event => {\n        projector.display(\n            cmdToLines(event.updateTasks.map(rollbackLine), event.cmd)\n        );\n    });\n    updtr.on(\"batch-update/result\", event => {\n        projector.stop();\n        if (event.success === true) {\n            terminal.append(\n                event.updateTasks.map(event.success ? successLine : failLine)\n            );\n        }\n        // Not showing the test stdout here when there was an error because\n        // we will proceed with the sequential update.\n    });\n    updtr.on(\"sequential-update/updating\", event => {\n        projector.display(cmdToLines(updatingLine(event), event.cmd));\n    });\n    updtr.on(\"sequential-update/testing\", event => {\n        projector.display(cmdToLines(testingLine(event), event.cmd));\n    });\n    updtr.on(\"sequential-update/rollback\", event => {\n        projector.display(cmdToLines(rollbackLine(event), event.cmd));\n    });\n    updtr.on(\"sequential-update/result\", event => {\n        projector.stop();\n        terminal.append([(event.success ? successLine : failLine)(event)]);\n        if (reporterConfig.testStdout === true && event.success === false) {\n            terminal.append([event.stdout]);\n        }\n    });\n    updtr.on(\"end\", ({ results }) => {\n        const duration = msToString(Date.now() - startTime);\n        const successful = filterSuccessfulUpdates(results);\n        const failed = filterFailedUpdates(results);\n\n        terminal.append([\"\"]);\n\n        if (successful.length > 0) {\n            terminal.append([\n                new Message(chalk.bold(\"%s successful\") + \" update%s.\", [\n                    successful.length,\n                    pluralize(successful.length),\n                ]),\n            ]);\n        }\n        if (failed.length > 0) {\n            terminal.append([\n                new Message(chalk.bold(\"%s failed\") + \" update%s.\", [\n                    failed.length,\n                    pluralize(failed.length),\n                ]),\n            ]);\n        }\n        if (excludedModules.length > 0) {\n            const list = excludedModules.map(excludedLine);\n\n            if (successful.length > 0 || failed.length > 0) {\n                terminal.append([\"\"]);\n            }\n            terminal.append(\n                [\n                    new Message(chalk.bold(\"%s skipped\") + \" module%s:\", [\n                        excludedModules.length,\n                        pluralize(excludedModules.length),\n                    ]),\n                    \"\",\n                ].concat(list)\n            );\n        }\n\n        terminal.append([\"\", new Message(\"Finished after %s.\", [duration])]);\n    });\n    updtr.on(\"error\", err => void handleError(err));\n}\n","export default Function.prototype;\n","import dense from \"./dense\";\nimport none from \"./none\";\n\n// The first property here is the default reporter\nexport default { dense, none };\n","import { EOL } from \"os\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport yargs from \"yargs\";\nimport chalk from \"chalk\";\nimport reporters from \"../reporters\";\nimport {\n    USE_OPTIONS,\n    USE_NPM,\n    USE_YARN,\n    UPDATE_TO_OPTIONS,\n    SAVE_OPTIONS,\n} from \"../constants/config\";\n\nconst reporterNames = Object.keys(reporters);\nconst pathToYarnLock = path.join(process.cwd(), \"yarn.lock\");\nconst useDefault = fs.existsSync(pathToYarnLock) === true ? USE_YARN : USE_NPM;\n\nexport default yargs\n    .usage(\n    [\n        \"\",\n        chalk.bold.cyan(\"Update outdated npm modules with zero pain™\"),\n        `${ chalk.bold(\"Usage:\") } $0 ${ chalk.dim(\"[options]\") }`,\n    ].join(EOL)\n    )\n    .option(\"use\", {\n        describe: \"Specify the package manager to use\",\n        choices: USE_OPTIONS,\n        default: useDefault,\n        alias: \"u\",\n    })\n    .option(\"exclude\", {\n        describe: \"Space separated list of module names that should not be updated\",\n        array: true,\n        alias: \"ex\",\n    })\n    .option(\"update-to\", {\n        describe: \"Specify which updates you want to install\",\n        choices: UPDATE_TO_OPTIONS,\n        default: UPDATE_TO_OPTIONS[0],\n        alias: \"to\",\n    })\n    .option(\"save\", {\n        describe: \"Specify how updated versions should be saved to the package.json\",\n        choices: SAVE_OPTIONS,\n        default: SAVE_OPTIONS[0],\n        alias: \"s\",\n    })\n    .option(\"reporter\", {\n        describe: \"Choose a reporter for the console output\",\n        choices: reporterNames,\n        default: reporterNames[0],\n        alias: \"r\",\n    })\n    .option(\"test\", {\n        describe: \"Specify a custom test command. Surround with quotes.\",\n        alias: \"t\",\n    })\n    .option(\"test-stdout\", {\n        describe: \"Show test stdout if the update fails\",\n        boolean: true,\n        alias: \"out\",\n    })\n    .option(\"registry\", {\n        describe: \"Specify a custom registry to use\",\n        alias: \"reg\",\n    })\n    .version()\n    .wrap(null)\n    .help().argv;\n","export default class Sequence {\n    constructor(name, updtr, baseEvent = {}) {\n        this.name = name;\n        this.updtr = updtr;\n        this.baseEvent = baseEvent;\n        this.isRunning = false;\n    }\n    start() {\n        this.isRunning = true;\n        this.emit(\"start\");\n    }\n    emit(eventName, event = {}) {\n        const fullEventName = this.name + \"/\" + eventName;\n\n        if (this.isRunning === false) {\n            throw new Error(\n                `Cannot emit event ${ fullEventName }: sequence is not running`\n            );\n        }\n        this.updtr.emit(fullEventName, {\n            ...this.baseEvent,\n            ...event,\n        });\n    }\n    exec(step, cmd) {\n        this.emit(step, { cmd });\n\n        return this.updtr.exec(cmd);\n    }\n    end(result) {\n        this.emit(\"end\", result);\n        this.isRunning = false;\n    }\n}\n","import {\n    UPDATE_TO_LATEST,\n    UPDATE_TO_NON_BREAKING,\n    UPDATE_TO_WANTED,\n} from \"../../constants/config\";\n\nfunction determineUpdateToVersion({ current, wanted, latest }, { updateTo }) {\n    switch (updateTo) {\n        case UPDATE_TO_LATEST:\n            return latest;\n        case UPDATE_TO_WANTED:\n            return wanted;\n        case UPDATE_TO_NON_BREAKING:\n        default:\n            return \"^\" + current;\n    }\n}\n\nexport function isUpdateToNonBreaking(updateTask) {\n    return updateTask.updateTo === \"^\" + updateTask.rollbackTo;\n}\n\nexport default function createUpdateTask(outdated, updtrConfig) {\n    return {\n        name: outdated.name,\n        updateTo: determineUpdateToVersion(outdated, updtrConfig),\n        rollbackTo: outdated.current,\n    };\n}\n","export const GIT = \"git\";\nexport const EXOTIC = \"exotic\";\nexport const UNSTABLE = \"unstable\";\nexport const EXCLUDED = \"excluded\";\nexport const NOT_WANTED = \"not-wanted\";\n","import semver from \"semver\";\nimport {\n    GIT,\n    UNSTABLE,\n    NOT_WANTED,\n    EXCLUDED,\n    EXOTIC,\n} from \"../../../src/constants/filterReasons\";\nimport { isUpdateToNonBreaking } from \"./createUpdateTask\";\n\nconst prePattern = /^pre/;\nconst reasonTests = [\n    {\n        name: EXCLUDED,\n        test: (updateTask, { exclude }) =>\n            exclude.some(name => updateTask.name === name) === true,\n    },\n    {\n        name: GIT,\n        test: updateTask => updateTask.updateTo === \"git\",\n    },\n    {\n        name: EXOTIC,\n        test: updateTask => updateTask.updateTo === \"exotic\",\n    },\n    {\n        name: NOT_WANTED,\n        test: updateTask =>\n            isUpdateToNonBreaking(updateTask) === false &&\n            semver.lte(updateTask.updateTo, updateTask.rollbackTo) === true,\n    },\n    {\n        name: UNSTABLE,\n        test(updateTask) {\n            if (isUpdateToNonBreaking(updateTask) === true) {\n                return null;\n            }\n\n            const diff = semver.diff(\n                updateTask.rollbackTo,\n                updateTask.updateTo\n            );\n            const unstableTest = diff !== null &&\n                prePattern.test(diff) === true &&\n                diff !== \"prerelease\";\n\n            return unstableTest === true;\n        },\n    },\n];\nconst reasons = reasonTests.map(test => test.name);\n\nexport default function filterUpdateTask(updateTask, updtrConfig) {\n    const reasonIndex = reasonTests.findIndex(\n        reasonTest => reasonTest.test(updateTask, updtrConfig) === true\n    );\n\n    return reasonIndex === -1 ? null : reasons[reasonIndex];\n}\n","import Sequence from \"./util/Sequence\";\nimport createUpdateTask from \"./util/createUpdateTask\";\nimport filterUpdateTask from \"./util/filterUpdateTask\";\nimport { PackageJsonNoAccessError } from \"../errors\";\n\nfunction getUpdateTasksFromStdout(updtr, outdatedCmd, stdout) {\n    if (stdout.length === 0) {\n        // When there is not stdout, there is nothing to update\n        return [];\n    }\n\n    return updtr.parse\n        .outdated(stdout, outdatedCmd)\n        .map(outdated => createUpdateTask(outdated, updtr.config));\n}\n\nexport default (async function init(updtr) {\n    const baseEvent = { config: updtr.config };\n    const outdatedCmd = updtr.cmds.outdated();\n    const sequence = new Sequence(\"init\", updtr, baseEvent);\n    let stdout;\n\n    sequence.start();\n\n    if ((await updtr.canAccessPackageJson()) === false) {\n        throw new PackageJsonNoAccessError(updtr.config.cwd);\n    }\n\n    await sequence.exec(\n        \"install-missing\",\n        updtr.cmds.installMissing({\n            registry: updtr.config.registry,\n        })\n    );\n\n    try {\n        stdout = (await sequence.exec(\"collect\", outdatedCmd)).stdout;\n    } catch (err) {\n        // npm exits with zero code 1 when there are outdated dependencies\n        // We don't check for the package manager here because yarn might change their\n        // behavior in the future to be npm-compatible.\n        if (err.code > 1) {\n            throw err;\n        }\n\n        stdout = err.stdout;\n    }\n\n    const allUpdateTasks = getUpdateTasksFromStdout(\n        updtr,\n        outdatedCmd,\n        stdout.trim()\n    );\n    const filterResults = allUpdateTasks.map(updateTask =>\n        filterUpdateTask(updateTask, updtr.config));\n    const result = {\n        updateTasks: allUpdateTasks.filter(\n            (updateTask, index) => filterResults[index] === null\n        ),\n        excluded: allUpdateTasks.reduce(\n            (excluded, updateTask, index) => {\n                const reason = filterResults[index];\n\n                if (reason === null) {\n                    return excluded;\n                }\n\n                return excluded.concat({\n                    ...updateTask,\n                    reason,\n                });\n            },\n            []\n        ),\n    };\n\n    sequence.end(result);\n\n    return result;\n});\n","export default function createUpdateResult(updateTask, success) {\n    return {\n        name: updateTask.name,\n        updateTo: updateTask.updateTo,\n        rollbackTo: updateTask.rollbackTo,\n        success,\n    };\n}\n","export default function updateTo(updateTask) {\n    return {\n        name: updateTask.name,\n        version: updateTask.updateTo,\n    };\n}\n","export default function rollbackTo(updateTask) {\n    return {\n        name: updateTask.name,\n        version: updateTask.rollbackTo,\n    };\n}\n","import Sequence from \"./util/Sequence\";\nimport createUpdateResult from \"./util/createUpdateResult\";\nimport updateTo from \"./util/updateTo\";\nimport rollbackTo from \"./util/rollbackTo\";\n\nfunction renderUpdate(updtr, updateTask) {\n    return updtr.cmds.install({\n        registry: updtr.config.registry,\n        modules: [updateTo(updateTask)],\n    });\n}\n\nfunction renderTest(updtr) {\n    return updtr.cmds.test();\n}\n\nfunction renderRollback(updtr, failedUpdateTask, nextUpdateTask) {\n    const modules = [rollbackTo(failedUpdateTask)];\n\n    if (nextUpdateTask !== undefined) {\n        modules.push(updateTo(nextUpdateTask));\n    }\n\n    return updtr.cmds.install({\n        registry: updtr.config.registry,\n        modules,\n    });\n}\n\nasync function runUpdateTask(sequence, updateTasks, i, previousUpdateResults) {\n    const updateResults = await previousUpdateResults;\n    const previousUpdateResult = updateResults[updateResults.length - 1];\n    const updateTask = updateTasks[i];\n    // If the previous update was a failure, we don't need to update now because\n    // during the rollback, the next update is also installed in parallel\n    const updateNecessary = previousUpdateResult === undefined ?\n        true :\n        previousUpdateResult.success === true;\n\n    sequence.baseEvent = {\n        updateTasks: {\n            current: i + 1,\n            total: updateTasks.length,\n        },\n        ...updateTask,\n    };\n    const updtr = sequence.updtr;\n    let testResult;\n    let success;\n\n    if (updateNecessary === true) {\n        await sequence.exec(\"updating\", renderUpdate(updtr, updateTask));\n    }\n\n    try {\n        testResult = await sequence.exec(\"testing\", renderTest(updtr));\n        success = true;\n    } catch (err) {\n        // Remember: instanceof Error might not work in Jest as expected\n        // https://github.com/facebook/jest/issues/2549\n        testResult = err;\n        success = false;\n    }\n\n    sequence.baseEvent.success = success;\n\n    if (success === false) {\n        const nextUpdateTask = i + 1 < updateTasks.length ?\n            updateTasks[i + 1] :\n            undefined;\n\n        await sequence.exec(\n            \"rollback\",\n            renderRollback(updtr, updateTask, nextUpdateTask)\n        );\n    }\n\n    sequence.emit(\"result\", {\n        stdout: testResult.stdout,\n    });\n\n    return updateResults.concat(createUpdateResult(updateTask, success));\n}\n\nexport default (async function sequentialUpdate(\n    updtr,\n    updateTasks,\n    previousUpdateResult\n) {\n    const sequence = new Sequence(\"sequential-update\", updtr, {\n        updateTasks,\n    });\n\n    if (updateTasks.length === 0) {\n        return [];\n    }\n\n    sequence.start();\n\n    const updateResults = await updateTasks.reduce(\n        (updateResults, updateTask, i) =>\n            runUpdateTask(sequence, updateTasks, i, updateResults),\n        previousUpdateResult === undefined ? [] : [previousUpdateResult]\n    );\n\n    if (previousUpdateResult !== undefined) {\n        // The previousUpdateResult is the first element in the updateResults array, so let's remove it.\n        updateResults.shift();\n    }\n\n    sequence.baseEvent = {\n        updateResults,\n    };\n\n    sequence.end();\n\n    return updateResults;\n});\n","import semver from \"semver\";\nimport { isUpdateToNonBreaking } from \"./createUpdateTask\";\n\nfunction isBreaking(updateTask) {\n    return isUpdateToNonBreaking(updateTask) === false &&\n        semver.satisfies(updateTask.updateTo, \"^\" + updateTask.rollbackTo) ===\n            false;\n}\n\nexport default function splitUpdateTask(updateTasks) {\n    const breaking = [];\n    const nonBreaking = [];\n\n    for (const updateTask of updateTasks) {\n        (isBreaking(updateTask) === true ? breaking : nonBreaking).push(\n            updateTask\n        );\n    }\n\n    return {\n        breaking,\n        nonBreaking,\n    };\n}\n","import Sequence from \"./util/Sequence\";\nimport updateTo from \"./util/updateTo\";\nimport rollbackTo from \"./util/rollbackTo\";\n\nfunction renderUpdate(updtr, updateTask) {\n    return updtr.cmds.install({\n        registry: updtr.config.registry,\n        modules: updateTask.map(updateTo),\n    });\n}\n\nfunction renderTest(updtr) {\n    return updtr.cmds.test();\n}\n\nfunction renderRollback(updtr, failedUpdateTasks) {\n    return updtr.cmds.install({\n        registry: updtr.config.registry,\n        modules: failedUpdateTasks.map(rollbackTo),\n    });\n}\n\nasync function update(sequence, updateTasks) {\n    const updtr = sequence.updtr;\n    let success;\n    let testResult;\n\n    await sequence.exec(\"updating\", renderUpdate(updtr, updateTasks));\n    try {\n        testResult = await sequence.exec(\"testing\", renderTest(updtr));\n        success = true;\n    } catch (err) {\n        // Remember: instanceof Error might not work in Jest as expected\n        // https://github.com/facebook/jest/issues/2549\n        testResult = err;\n        success = false;\n    }\n\n    sequence.baseEvent.success = success;\n\n    if (success === false && updateTasks.length > 1) {\n        // If the update was a failure, we roll back every update except the first.\n        // The first update will be tested with the sequential-update. This way we skip one unnecessary install cycle.\n        await sequence.exec(\n            \"rollback\",\n            renderRollback(updtr, updateTasks.slice(1))\n        );\n    }\n\n    sequence.emit(\"result\", {\n        stdout: testResult.stdout,\n    });\n\n    return success;\n}\n\nexport default (async function batchUpdate(updtr, updateTasks) {\n    const sequence = new Sequence(\"batch-update\", updtr, {\n        updateTasks,\n    });\n    let success = true;\n\n    if (updateTasks.length > 0) {\n        sequence.start();\n        success = await update(sequence, updateTasks);\n        sequence.baseEvent = {\n            success,\n        };\n        sequence.end();\n    }\n\n    return success;\n});\n","import Sequence from \"./util/Sequence\";\nimport { isUpdateToNonBreaking } from \"./util/createUpdateTask\";\n\nfunction isIncompleteResult(result) {\n    return result.success === true && isUpdateToNonBreaking(result) === true;\n}\n\nasync function finishIncomplete(sequence, incomplete, allResults) {\n    const updtr = sequence.updtr;\n    const modulesToCheck = incomplete.map(result => result.name);\n    const listCmd = updtr.cmds.list({ modules: modulesToCheck });\n\n    let stdout;\n\n    try {\n        stdout = (await sequence.exec(\"list-incomplete\", listCmd)).stdout;\n    } catch (err) {\n        // npm may exit with zero code 1 complaining about invalid installed versions\n        if (err.code > 1) {\n            throw err;\n        }\n        stdout = err.stdout;\n    }\n    const moduleVersions = updtr.parse.list(stdout, listCmd);\n\n    return (\n        allResults\n            .map(result => {\n                if (isIncompleteResult(result) === false) {\n                    return result;\n                }\n\n                const version = moduleVersions.find(\n                    module => module.name === result.name\n            ).version;\n\n                return {\n                    ...result,\n                    updateTo: version,\n                };\n            })\n    // Remove results where no actual update did happen.\n    // These results can happen if the updateTo option was set to non-breaking\n    // and the module did not have a new version for the rollbackTo version range.\n            .filter(result => result.rollbackTo !== result.updateTo)\n    );\n}\n\nexport default (async function finish(updtr, results) {\n    const incomplete = results.filter(isIncompleteResult);\n    const sequence = new Sequence(\"finish\", updtr);\n    let finishedResults = results;\n\n    if (incomplete.length > 0) {\n        sequence.start();\n        sequence.emit(\"incomplete\", { incomplete });\n        finishedResults = await finishIncomplete(sequence, incomplete, results);\n        sequence.end({ results: finishedResults });\n    }\n\n    return finishedResults;\n});\n","import semver from \"semver\";\n\n// Matches a semver version range that can be transformed to the new version in a safe manner\nconst expectedSemverPattern = /^(\\^|~|>=|)(\\d+)\\.(\\d+|x|\\*)\\.(\\d+|x|\\*)(-[a-z][a-z\\-.\\d]+|)$/i;\nconst numberPattern = /^\\d+$/;\n\nfunction parse(semverString) {\n    const match = semverString.match(expectedSemverPattern);\n\n    return match === null ?\n        null :\n    {\n        operator: match[1],\n        major: match[2],\n        minor: match[3],\n        patch: match[4],\n        release: match[5],\n    };\n}\n\nfunction isPinned({ operator, major, minor, patch }) {\n    return operator === \"\" &&\n        [major, minor, patch].every(\n            version => numberPattern.test(version) === true\n        );\n}\n\nfunction tryVersionRangeUpdate(parsedOldRange, parsedNewVersion) {\n    const { minor, patch, operator } = parsedOldRange;\n    let newMinor = parsedNewVersion.minor;\n    let newPatch = parsedNewVersion.patch;\n\n    if (numberPattern.test(minor) === false) {\n        newMinor = minor;\n        newPatch = numberPattern.test(patch) === true ? minor : patch;\n    } else if (numberPattern.test(patch) === false) {\n        newPatch = patch;\n    }\n\n    return operator +\n        parsedNewVersion.major +\n        \".\" +\n        newMinor +\n        \".\" +\n        newPatch +\n        parsedNewVersion.release;\n}\n\nfunction isExpectedNewVersion(parsedNewVersion) {\n    return parsedNewVersion !== null && parsedNewVersion.operator === \"\";\n}\n\nfunction fallbackRange(newVersion) {\n    return \"^\" + newVersion;\n}\n\n/**\n * Tries to apply the newVersion while maintaining the range (see https://github.com/peerigon/updtr/issues/47)\n * This is kind of risky because there are tons of semver possibilities. That's why this\n * function is very conservative in accepting semver ranges. If the range is not easily updatable,\n * we opt-out to npm's default caret operator.\n *\n * @param {string} oldRange\n * @param {string} newVersion\n * @returns {string}\n */\nexport default function updateVersionRange(oldRange, newVersion) {\n    const parsedOldRange = parse(oldRange.trim());\n\n    if (parsedOldRange !== null) {\n        if (isPinned(parsedOldRange) === true) {\n            // The old version was pinned, so the new should also be pinned\n            return newVersion;\n        }\n\n        const parsedNewVersion = parse(newVersion);\n\n        if (isExpectedNewVersion(parsedNewVersion) === false) {\n            return newVersion;\n        }\n\n        const newVersionRange = tryVersionRangeUpdate(\n            parsedOldRange,\n            parsedNewVersion\n        );\n\n        // All this is kind of error prone so let's do a sanity check if everything's ok\n        if (semver.satisfies(newVersion, newVersionRange) === true) {\n            return newVersionRange;\n        }\n    }\n\n    return fallbackRange(newVersion);\n}\n","import updateVersionRange from \"./updateVersionRange\";\nimport { filterSuccessfulUpdates } from \"./filterUpdateResults\";\nimport { SAVE_CARET, SAVE_EXACT, SAVE_SMART } from \"../../constants/config\";\n\nconst dependencyTypes = [\n    \"dependencies\",\n    \"devDependencies\",\n    \"optionalDependencies\",\n];\n\nfunction newVersionRange(updtrConfig, oldVersionRange, update) {\n    switch (updtrConfig.save) {\n        case SAVE_CARET:\n            return \"^\" + update.updateTo;\n        case SAVE_EXACT:\n            return update.updateTo;\n        case SAVE_SMART:\n    }\n\n    return updateVersionRange(oldVersionRange, update.updateTo);\n}\n\nexport default function createUpdatedPackageJson(\n    oldPackageJson,\n    updateResults,\n    updtrConfig\n) {\n    const newPackageJson = { ...oldPackageJson };\n    const successfulUpdates = filterSuccessfulUpdates(updateResults);\n    let dependenciesToSave = successfulUpdates;\n\n    dependencyTypes\n        .filter(type => oldPackageJson[type] !== undefined)\n        .forEach(type => {\n            const dependencies = oldPackageJson[type];\n            const newDependencies = {};\n\n            Object.keys(dependencies).forEach(moduleName => {\n                const update = successfulUpdates.find(\n                    ({ name }) => name === moduleName\n                );\n                const oldVersionRange = dependencies[moduleName];\n\n                newDependencies[moduleName] = update === undefined ?\n                    oldVersionRange :\n                    newVersionRange(updtrConfig, oldVersionRange, update);\n\n                dependenciesToSave = dependenciesToSave.filter(\n                    ({ name }) => name !== moduleName\n                );\n            });\n\n            newPackageJson[type] = newDependencies;\n        });\n\n    if (dependenciesToSave.length > 0) {\n        const dependencies = newPackageJson.dependencies || {};\n\n        dependenciesToSave.forEach(update => {\n            dependencies[update.name] = update.updateTo;\n        });\n\n        newPackageJson.dependencies = dependencies;\n    }\n\n    return newPackageJson;\n}\n","import createUpdatedPackageJson from \"./util/createUpdatedPackageJson\";\nimport Sequence from \"./util/Sequence\";\n\nfunction lastChar(str) {\n    return str.charAt(str.length - 1);\n}\n\nfunction stringify(newPackageJson, oldPackageJsonStr) {\n    let newPackageJsonStr = JSON.stringify(newPackageJson, null, \"  \");\n    const lastCharFromOldPackageJson = lastChar(oldPackageJsonStr);\n\n    // Preserve the new line character at the end if there was one\n    if (lastCharFromOldPackageJson !== lastChar(newPackageJsonStr)) {\n        newPackageJsonStr += lastCharFromOldPackageJson;\n    }\n\n    return newPackageJsonStr;\n}\n\nasync function enhanceErrorMessage(fn, enhancedMessage) {\n    try {\n        return await fn();\n    } catch (err) {\n        err.message = enhancedMessage + err.message;\n        throw err;\n    }\n}\n\nexport default (async function updatePackageJson(updtr, updateResults) {\n    const sequence = new Sequence(\"update-package-json\", updtr);\n    let oldPackageJsonStr;\n\n    sequence.start();\n\n    const oldPackageJson = await enhanceErrorMessage(\n        async () => {\n            oldPackageJsonStr = await updtr.readFile(\"package.json\");\n\n            return JSON.parse(oldPackageJsonStr);\n        },\n        \"Error while trying to read the package.json: \"\n    );\n\n    const newPackageJson = createUpdatedPackageJson(\n        oldPackageJson,\n        updateResults,\n        updtr.config\n    );\n\n    await enhanceErrorMessage(\n        () =>\n            updtr.writeFile(\n                \"package.json\",\n                stringify(newPackageJson, oldPackageJsonStr)\n            ),\n        \"Error while trying to write the package.json: \"\n    );\n\n    sequence.end({\n        packageJson: newPackageJson,\n    });\n});\n","import init from \"./tasks/init\";\nimport sequentialUpdate from \"./tasks/sequentialUpdate\";\nimport splitUpdateTasks from \"./tasks/util/splitUpdateTasks\";\nimport batchUpdate from \"./tasks/batchUpdate\";\nimport createUpdateResult from \"./tasks/util/createUpdateResult\";\nimport finish from \"./tasks/finish\";\nimport updatePackageJson from \"./tasks/updatePackageJson\";\n\nasync function runUpdateTasks(updtr, updateTasks) {\n    const results = [];\n    const { breaking, nonBreaking } = splitUpdateTasks(updateTasks);\n    const sequentialUpdateTasks = breaking.slice();\n    let batchSuccess; // can be undefined, true or false\n    let batchUpdateFailure;\n\n    // Run batch update if we have more than one non-breaking update\n    // If the batch update fails, it will roll back all modules except the first one.\n    // This way we can skip one install command since we will run the sequential update for it anyway.\n    if (nonBreaking.length > 1) {\n        batchSuccess = await batchUpdate(updtr, nonBreaking);\n    }\n\n    if (batchSuccess === true) {\n        results.push(\n            ...nonBreaking.map(updateTask =>\n                createUpdateResult(updateTask, true)\n            )\n        );\n    } else {\n        sequentialUpdateTasks.unshift(...nonBreaking);\n        // If batchSuccess is false, we have actually executed the batch update and it returned false\n        if (batchSuccess === false) {\n            batchUpdateFailure = createUpdateResult(nonBreaking[0], false);\n        }\n    }\n\n    // Run sequential update for all breaking updates and non-breaking batch updates that failed\n    results.push(\n        ...(await sequentialUpdate(\n            updtr,\n            sequentialUpdateTasks,\n            batchUpdateFailure\n        ))\n    );\n\n    return finish(updtr, results);\n}\n\nexport default (async function run(updtr) {\n    const results = [];\n\n    updtr.emit(\"start\", {\n        config: updtr.config,\n    });\n\n    const { updateTasks } = await init(updtr);\n\n    if (updateTasks.length > 0) {\n        results.push(...(await runUpdateTasks(updtr, updateTasks)));\n        await updatePackageJson(updtr, results);\n    }\n\n    updtr.emit(\"end\", {\n        config: updtr.config,\n        results,\n    });\n\n    return results;\n});\n","import fs from \"fs\";\nimport pify from \"pify\";\n\nexport default pify(fs);\n","import childProcess from \"child_process\";\n\nfunction promiseExec(cwd, cmd) {\n    return new Promise(resolve => {\n        childProcess.exec(\n            cmd,\n            { maxBuffer: Infinity, encoding: \"utf8\", cwd },\n            (err, stdout, stderr) => void resolve({ err, stdout, stderr })\n        );\n    });\n}\n\nexport default (async function exec(cwd, cmd) {\n    const { err, stdout, stderr } = await promiseExec(cwd, cmd);\n\n    if (err !== null) {\n        err.stdout = stdout;\n        err.stderr = stderr;\n\n        throw err;\n    }\n\n    return { stdout, stderr };\n});\n","function installFn(baseCmd) {\n    return ({ registry, modules } = {}) =>\n        [baseCmd, stringifyRegistry(registry), stringifyModules(modules)].join(\n            \"\"\n        );\n}\n\nfunction stringifyModules(modules) {\n    return Array.isArray(modules) === true ?\n        \" \" +\n              modules\n                  // We need to wrap this in double-quotes because some semver\n                  // characters like the caret symbol are reserved characters on Windows.\n                  .map(({ name, version }) => `\"${ name }@${ version }\"`)\n                  .join(\" \") :\n        \"\";\n}\n\nfunction stringifyRegistry(registry) {\n    return registry === undefined ? \"\" : ` --registry \"${ registry }\"`;\n}\n\nfunction list({ modules } = {}) {\n    return [\n        \"npm ls --json --depth=0\",\n        Array.isArray(modules) === true ? \" \" + modules.join(\" \") : \"\",\n    ].join(\"\");\n}\n\nexport default {\n    npm: {\n        outdated: () => \"npm outdated --json --depth=0\",\n        installMissing: installFn(\"npm install\"),\n        install: installFn(\"npm install\"),\n        // remove: ({ name }) => [\"npm remove \", name].join(\"\"),\n        test: () => \"npm test\",\n        list,\n    },\n    // yarn does not support custom registries yet.\n    // However, these renderers accept them anyway.\n    yarn: {\n        outdated: () => \"yarn outdated --json --flat\",\n        installMissing: installFn(\"yarn\"),\n        install: installFn(\"yarn add\"),\n        // remove: ({ name }) => [\"yarn remove \", name].join(\"\"),\n        test: () => \"yarn test\",\n        // We use npm for listing the dependencies because there is no\n        // special benefit by using yarn here\n        list,\n    },\n};\n","const STRING_PROPERTIES = [\"name\", \"current\", \"wanted\", \"latest\"];\n\n/**\n * Applies JSON.parse on the str.\n * Additionally, returns null if the str was empty or just contained whitespace.\n *\n * @param {string} str\n * @returns {*}\n */\nfunction parse(str) {\n    const trimmed = str.trim();\n\n    if (trimmed.length === 0) {\n        return null;\n    }\n\n    return JSON.parse(trimmed);\n}\n\nfunction returnIfValid(result) {\n    STRING_PROPERTIES.forEach(prop => {\n        if (typeof result[prop] !== \"string\") {\n            throw new Error(\"Unexpected output format of package manager\");\n        }\n    });\n\n    return result;\n}\n\nfunction tryParse(normalizer) {\n    return (stdout, cmd) => {\n        try {\n            return normalizer(parse(stdout));\n        } catch (err) {\n            err.message = `Error when trying to parse stdout from command '${ cmd }': ${ err.message }`;\n            throw err;\n        }\n    };\n}\n\nfunction arrToObj(arr, keys) {\n    return keys.reduce((obj, key, i) => {\n        obj[key] = arr[i];\n\n        return obj;\n    }, {});\n}\n\n// By sorting the parsed data, we get deterministic results across different npm and yarn versions.\n// As a nice side-effect, a package like eslint will always be updated before eslint-config-peerigon\n// which might have a peer dependency on eslint\n// See https://github.com/peerigon/updtr/issues/48\nfunction sortByName(o1, o2) {\n    return o1.name > o2.name;\n}\n\nconst list = tryParse(\n    parsed =>\n        (parsed.dependencies === undefined ?\n            [] :\n            Object.keys(parsed.dependencies)\n                .map(name => ({\n                    name,\n                    version: parsed.dependencies[name].version,\n                }))\n                .sort(sortByName))\n);\n\nexport default {\n    npm: {\n        outdated: tryParse(parsed => {\n            if (parsed === null) {\n                return [];\n            }\n\n            const names = Object.keys(parsed);\n\n            return names\n                .map(name => parsed[name])\n                .map((dep, index) =>\n                    returnIfValid({\n                        name: names[index],\n                        current: dep.current,\n                        wanted: dep.wanted,\n                        latest: dep.latest,\n                    })\n                )\n                .sort(sortByName);\n        }),\n        list,\n    },\n    yarn: {\n        outdated: tryParse(\n            parsed =>\n                (parsed === null ?\n                    [] :\n                    parsed.data.body\n                        .map(row => arrToObj(row, parsed.data.head))\n                        .map(dep =>\n                            returnIfValid({\n                                name: dep.Package,\n                                current: dep.Current,\n                                wanted: dep.Wanted,\n                                latest: dep.Latest,\n                            })\n                        )\n                        .sort(sortByName))\n        ),\n        // We currently only use npm for the list command (see cmds.js).\n        // Put the real implementation here if we decide to use yarn for list.\n        list,\n    },\n};\n","import EventEmitter from \"events\";\nimport path from \"path\";\nimport fs from \"./util/fs\";\nimport {\n    USE_OPTIONS,\n    UPDATE_TO_OPTIONS,\n    SAVE_OPTIONS,\n} from \"./constants/config\";\nimport exec from \"./exec/exec\";\nimport cmds from \"./exec/cmds\";\nimport parse from \"./exec/parse\";\nimport {\n    RequiredOptionMissingError,\n    OptionValueNotSupportedError,\n    YarnWithCustomRegistryError,\n} from \"./errors\";\n\n// node v4 has no dedicated constants object.\n// Remove this if node v4 is not supported anymore.\nconst FS_CONSTANTS = fs.constants === undefined ? fs : fs.constants;\n\nfunction checkCwd(cwd) {\n    if (typeof cwd !== \"string\") {\n        throw new RequiredOptionMissingError(\"cwd\", cwd);\n    }\n}\n\nfunction checkUse(use) {\n    if (USE_OPTIONS.indexOf(use) === -1) {\n        throw new OptionValueNotSupportedError(\"use\", use);\n    }\n}\n\nfunction checkUpdateTo(updateTo) {\n    if (UPDATE_TO_OPTIONS.indexOf(updateTo) === -1) {\n        throw new OptionValueNotSupportedError(\"updateTo\", updateTo);\n    }\n}\n\nfunction checkSave(save) {\n    if (SAVE_OPTIONS.indexOf(save) === -1) {\n        throw new OptionValueNotSupportedError(\"save\", save);\n    }\n}\n\nfunction checkForYarnWithCustomReg(packageManager, registry) {\n    if (packageManager === \"yarn\" && registry !== undefined) {\n        throw new YarnWithCustomRegistryError();\n    }\n}\n\nexport default class Updtr extends EventEmitter {\n    /**\n     * The config passed-in here should look identically to the CLI config.\n     * Dash-cased properties should be renamed to camelCased.\n     * The goal is to replicate the API of the CLI as close as possible so users don't\n     * have to guess the options.\n     *\n     * @param {UpdtrConfig} config\n     */\n    constructor(config) {\n        super();\n\n        const cwd = config.cwd;\n        const registry = config.registry;\n        const packageManager = config.use === undefined ?\n            USE_OPTIONS[0] :\n            config.use;\n        const updateTo = config.updateTo === undefined ?\n            UPDATE_TO_OPTIONS[0] :\n            config.updateTo;\n        const exclude = Array.isArray(config.exclude) === true ?\n            config.exclude :\n            [];\n        const save = config.save === undefined ? SAVE_OPTIONS[0] : config.save;\n\n        checkCwd(cwd);\n        checkUse(packageManager);\n        checkForYarnWithCustomReg(packageManager, registry);\n        checkUpdateTo(updateTo);\n        checkSave(save);\n\n        this.config = {\n            cwd,\n            use: packageManager,\n            exclude,\n            test: config.test,\n            registry,\n            updateTo,\n            save,\n        };\n        this.cmds = cmds[packageManager];\n        this.parse = parse[packageManager];\n\n        if (typeof config.test === \"string\") {\n            this.cmds = {\n                ...this.cmds,\n                test: () => config.test,\n            };\n        }\n    }\n    async canAccessPackageJson() {\n        let result = true;\n\n        try {\n            await fs.access(\n                path.join(this.config.cwd, \"package.json\"),\n                FS_CONSTANTS.R_OK | FS_CONSTANTS.W_OK // eslint-disable-line no-bitwise\n            );\n        } catch (err) {\n            result = false;\n        }\n\n        return result;\n    }\n    exec(cmd) {\n        return exec(this.config.cwd, cmd);\n    }\n    readFile(filenameInCwd) {\n        return fs.readFile(path.join(this.config.cwd, filenameInCwd), \"utf8\");\n    }\n    writeFile(filenameInCwd, contents) {\n        return fs.writeFile(\n            path.join(this.config.cwd, filenameInCwd),\n            contents\n        );\n    }\n    dispose() {\n        this.removeAllListeners();\n    }\n}\n","import run from \"./run\";\nimport Updtr from \"./Updtr\";\nimport * as errors from \"./errors\";\n\nexport function create(config) {\n    return new Updtr(config);\n}\n\nexport { errors, run };\n","import argv from \"./argv\";\nimport { create, run } from \"./..\";\nimport reporters from \"../reporters\";\n\nasync function start() {\n    const cwd = process.cwd();\n    const config = { ...argv };\n    const reporterConfig = {\n        stream: process.stdout,\n        testStdout: argv.testStdout,\n    };\n    const reporter = reporters[argv.reporter];\n\n    config.cwd = cwd;\n\n    const updtr = create(config);\n\n    reporter(updtr, reporterConfig);\n    try {\n        await run(updtr);\n    } catch (err) {\n        updtr.emit(\"error\", err);\n    }\n}\n\nstart();\n"],"names":["lineToString","line","Array","isArray","join","String","Projector","terminal","frameRate","delay","Math","floor","timeoutId","stop","append","frame","map","setTimeout","display","rewind","calcNumOfRows","lines","columns","ceil","stringWidth","lineContent","allRows","rows","setBlocking","stream","_handle","Terminal","isTTY","Error","hide","hasBeenResized","on","length","push","content","clearScreen","eraseDown","write","removedLines","pop","ansiEscapes","cursorUp","Message","template","variables","split","reduce","str","part","i","valueOf","isWin","process","platform","winFallback","Spinner","spinnerName","spinner","cliSpinners","frames","interval","max","currentInterval","Date","now","currentFrame","INDICATOR_NEUTRAL","INDICATOR_FAIL","INDICATOR_PENDING","INDICATOR_OK","COLORS","chalk","grey","red","yellow","green","Indicator","initialState","state","unicons","cli","USE_NPM","USE_YARN","USE_OPTIONS","UPDATE_TO_LATEST","UPDATE_TO_NON_BREAKING","UPDATE_TO_WANTED","UPDATE_TO_OPTIONS","SAVE_SMART","SAVE_CARET","SAVE_EXACT","SAVE_OPTIONS","configNames","configValues","list","configFilter","option","cmd","undefined","reg","configList","config","filter","key","name","toString","customConfigToLines","item","pluralize","num","PackageJsonNoAccessError","dir","RequiredOptionMissingError","optionName","optionValue","OptionValueNotSupportedError","unsupportedValue","YarnWithCustomRegistryError","ERROR","bgRed","bold","handleError","err","constructor","stack","shift","message","error","exit","milliseconds","toFixed","filterSuccessfulUpdates","results","result","success","filterFailedUpdates","updatingLine","updateTask","rollbackTo","arrowRight","updateTo","testingLine","rollbackLine","successLine","failLine","excludedLine","excluded","reason","cmdToLines","description","concat","updtr","reporterConfig","projector","startTime","excludedModules","updateTasks","event","testStdout","stdout","duration","msToString","successful","failed","Function","prototype","dense","none","reporterNames","reporters","pathToYarnLock","path","cwd","useDefault","fs","existsSync","yargs","usage","cyan","dim","EOL","version","wrap","help","argv","Sequence","baseEvent","isRunning","emit","fullEventName","eventName","step","exec","determineUpdateToVersion","current","wanted","latest","isUpdateToNonBreaking","createUpdateTask","outdated","updtrConfig","GIT","EXOTIC","UNSTABLE","EXCLUDED","NOT_WANTED","prePattern","reasonTests","exclude","some","lte","diff","semver","unstableTest","test","reasons","filterUpdateTask","reasonIndex","findIndex","reasonTest","getUpdateTasksFromStdout","outdatedCmd","parse","cmds","start","canAccessPackageJson","installMissing","registry","code","trim","allUpdateTasks","index","filterResults","end","init","createUpdateResult","sequence","previousUpdateResults","updateResults","previousUpdateResult","renderUpdate","renderTest","testResult","nextUpdateTask","runUpdateTask","install","modules","renderRollback","failedUpdateTask","sequentialUpdate","isBreaking","satisfies","splitUpdateTask","breaking","nonBreaking","slice","update","failedUpdateTasks","batchUpdate","incomplete","allResults","modulesToCheck","listCmd","isIncompleteResult","moduleVersions","find","module","finishIncomplete","finishedResults","finish","expectedSemverPattern","numberPattern","semverString","match","isPinned","operator","major","minor","patch","every","tryVersionRangeUpdate","parsedOldRange","parsedNewVersion","newMinor","newPatch","release","isExpectedNewVersion","fallbackRange","newVersion","updateVersionRange","oldRange","newVersionRange","dependencyTypes","oldVersionRange","save","createUpdatedPackageJson","oldPackageJson","newPackageJson","successfulUpdates","dependenciesToSave","type","dependencies","newDependencies","forEach","moduleName","fn","enhancedMessage","enhanceErrorMessage","lastChar","charAt","stringify","oldPackageJsonStr","newPackageJsonStr","lastCharFromOldPackageJson","readFile","writeFile","updatePackageJson","batchSuccess","unshift","runUpdateTasks","run","pify","promiseExec","maxBuffer","Infinity","encoding","stderr","resolve","installFn","baseCmd","stringifyRegistry","stringifyModules","STRING_PROPERTIES","trimmed","JSON","returnIfValid","prop","tryParse","normalizer","arrToObj","arr","keys","obj","sortByName","o1","o2","parsed","names","dep","data","body","row","head","Package","Current","Wanted","Latest","FS_CONSTANTS","constants","checkCwd","checkUse","use","indexOf","checkUpdateTo","checkSave","checkForYarnWithCustomReg","packageManager","Updtr","access","R_OK","W_OK","filenameInCwd","contents","removeAllListeners","EventEmitter","create","reporter"],"mappings":"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"}